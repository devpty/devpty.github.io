#cc {
	display: flex;
	align-items: center;
	justify-content: center;
	width: 100%;
	height: 100%;
	position: fixed;
	top: 0;
	left: 0;
}
#cube {
	--size: 30vmin;
	--x: 0;
	--y: 0;
	height: var(--size);
	width: var(--size);
	position: relative;
	transform: rotateX(-35.264389682754deg) rotateY(45deg);
	transform-style: preserve-3d;
	animation-name: spin;
	animation-timing-function: linear;
	animation-direction: normal;
	animation-iteration-count: infinite;
	animation-duration: 1s;
	animation-delay: -500ms;
}
@keyframes spin {
	0% {
		transform: rotateX(-35.264389682754deg) rotateY(90deg);
	}
	100% {
		transform: rotateX(-35.264389682754deg) rotateY(0deg);
	}
}
.cube {
	--cf: -2;
	--ct: 0, 0, 0;
	box-sizing: border-box;
	border: 2px solid var(--fg);
	position: absolute;
	height: calc(var(--size) + 1px);
	width: calc(var(--size) + 1px);
	border-radius: 0.75px;
}
.cube:nth-of-type(3n+1) {
	transform: translate3d(0, 0, calc(var(--size) / var(--cf))) translate3d(var(--ct));
}
.cube:nth-of-type(3n+2) {
	transform: rotateY(90deg) scaleZ(-1) translate3d(0, 0, calc(var(--size) / var(--cf))) translate3d(var(--ct));
}
.cube:nth-of-type(3n+3) {
	transform: rotateX(90deg) rotateZ(-90deg) translate3d(0, 0, calc(var(--size) / var(--cf))) translate3d(var(--ct));
}
.cube:nth-of-type(2n+2) {
	--cf: 2;
}
.cube:nth-of-type(7),
.cube:nth-of-type(8),
.cube:nth-of-type(9) {
	border-width: 0 2px 2px 0;
	border-color: var(--mix);
	--ct: 0.1px, 0.1px, -0.1px;
	--cf: -2;
}
.cube:nth-of-type(1),
.cube:nth-of-type(3),
.cube:nth-of-type(5) {
	border-width: 2px 0 0 2px;
}
